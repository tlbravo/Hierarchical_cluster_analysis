library(tidyverse)
library(cluster)
library(fpc)
library(factoextra)
library(janitor)
library(klaR)
library(ggplot2)
library(VIM)
#reading data from github
cheeses <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-04/cheeses.csv')
View(cheeses)
#selecting categorical columns: cheese, milk, country, type, flavor
cheesedf<-cheeses[c(1,3,4,7, 13)]
#using k nearest neighbors to impute data into cells with missing values
cheesedf_clean <- kNN(cheesedf, imp_var = FALSE) %>%
mutate(milk = as.character(milk)) %>%
separate(milk, into = c("milk_clean", "other"), sep = ",", extra = "drop")
set.seed(123)
cheese_kmodes <- kmodes(cheesedf_clean, modes = 3, iter.max = 100, weighted = FALSE)
library(tidyverse)
library(cluster)
library(fpc)
library(factoextra)
library(janitor)
library(klaR)
library(ggplot2)
library(VIM)
#reading data from github
cheeses <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-04/cheeses.csv')
View(cheeses)
#selecting categorical columns: cheese, milk, country, type, flavor
cheesedf<-cheeses[c(1,3,4,7, 13)]
#using k nearest neighbors to impute data into cells with missing values
cheesedf_clean <- kNN(cheesedf, imp_var = FALSE)
cheesedf_clean$milk <- as.character(cheesedf_clean$milk)
cheesedf_clean$milk <- sapply(strsplit(cheesedf_clean$milk, ","), function(x) trimws(x[1]))
# Perform k-modes clustering
set.seed(123)
cheese_kmodes <- kmodes(cheesedf_clean, modes = 3, iter.max = 100, weighted = FALSE)
# Add cluster labels to the dataset
cheesedf_clean$cluster <- cheese_kmodes$cluster
# Convert character columns to factors
cheesedf_clean <- data.frame(lapply(cheesedf_clean, function(x) {
if (is.character(x)) {
as.factor(x)
} else {
x
}}))
# Compute Gower's distance for categorical data
gower_dist <- daisy(cheesedf_clean, metric = "gower")
# Calculate silhouette scores
silhouette_score <- silhouette(cheese_kmodes$cluster, gower_dist)
# Visualize silhouette plot
fviz_silhouette(silhouette_score)
#bar plot
ggplot(cheesedf_clean, aes(x = milk_clean, fill = factor(cluster))) +
geom_bar(position = "dodge") +
labs(title = "Milk Types Across Clusters", x = "Milk Type", fill = "Cluster") +
theme_minimal()
ggplot(cheesedf_clean, aes(x = milk, fill = factor(cluster))) +
geom_bar(position = "dodge") +
labs(title = "Milk Types Across Clusters", x = "Milk Type", fill = "Cluster") +
theme_minimal()
ggplot(cheesedf_clean, aes(x = milk, fill = factor(cluster))) +
geom_bar(position = "dodge") +
labs(title = "Milk Types Across Clusters", x = "Milk Type", fill = "Cluster") +
theme_minimal(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
ggplot(cheesedf_clean, aes(x = milk, fill = factor(cluster))) +
geom_bar(position = "dodge") +
labs(title = "Milk Types Across Clusters", x = "Milk Type", fill = "Cluster") +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
cheesedf_clean %>%
group_by(cluster) %>%
summarize(coumt = n())
# 1: 487
# 2: 272
# 3: 428
# somewhat evenly distributed
cheesedf_clean %>%
group_by(cluster, milk) %>%
tally() %>%
mutate(percentage = n / sum(n) * 100)
cheesedf_clean %>%
group_by(cluster, country) %>%
tally() %>%
mutate(percentage = n / sum(n) * 100)
print(cheese_kmodes$modes)
print(cheese_kmodes$modes[1, ])
